#pragma once

#include <memory>
#include "tcpflow_file_listing.hh"

struct tcpflow_findx_entry {
    uint64_t byte_index;
    long double timestamp;
    uint64_t length;

    bool operator<(const tcpflow_findx_entry &other) const {
        return byte_index < other.byte_index;
    }
};

/*!
 * \brief Parses .findx file generated by tcpflow (-I option).
 */
class tcpflow_findx_parser {
    std::shared_ptr<tcpflow_file_info> parsed_stream;

    std::vector<tcpflow_findx_entry> entries;

    void load_entries();
public:
    explicit tcpflow_findx_parser(std::shared_ptr<tcpflow_file_info> parsedStream);

    [[nodiscard]] long double timestamp_for_byte(uint64_t byte_index) const;
};